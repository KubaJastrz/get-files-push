#!/bin/bash

set -e
# set -x

n() {
  $@ &>/dev/null
}

make_file() {
  local branch=$(git branch --show-current)
  touch "x/$branch-$1"
  git add x
  git commit -m "$1" &>/dev/null
}

checkout() {
  n git checkout $1
}

push() {
  n git push $@ -u testing HEAD
}

merge() {
  n git merge $1 -m $2-merge
}

reset_tests() {
  checkout master
  n git branch -D dev feature fix old || true
  n git push testing --delete dev feature old || true
  n git push testing --delete feature || true
  n git push testing --delete fix || true
  n git push testing --delete old || true

  n git checkout -b dev

  make_file a
  push -f
}

make_old() {
  make_file b
  n git checkout HEAD~1
  n git branch old
  checkout old
  make_file z
  checkout dev
  merge old c
  push
}

make_feature() {
  n git branch feature
  checkout feature
}

make_fix() {
  n git branch fix
  checkout fix
}

expect() {
  echo "$1"
}

run_test() {
  local result=$(./get-files-push)
  if [ -z "$result" ]; then
    echo -
  else
    echo -e "$result"
  fi
}



#
# --A--  commit
# -{A}-  merge commit
# -(A)-  commit on remote
#


echo
echo



# =================================
#
#     (dev)     --(A)-(B)
#                   \   \
#     (feature)      E--{G}--H
#
echo 
echo TEST 25 - escaped files
expect 'x/feature-e 1'
expect 'x/feature-h 2'
echo 

reset_tests
make_file b
push
n git checkout HEAD~1
make_feature
make_file 'e 1'
merge dev g
make_file 'h 2'

echo RESULT 25
run_test
echo




echo
echo


n git checkout master
